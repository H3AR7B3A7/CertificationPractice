/*C1*/SET SCHEMA SYSTEM_LOBS
INSERT INTO BLOCKS VALUES(0,2147483647,0)
COMMIT
/*C2*/SET SCHEMA PUBLIC
DROP PROCEDURE read_e_names IF EXISTS
DROP PROCEDURE read_names_by_letter IF EXISTS
DROP PROCEDURE magic_number IF EXISTS
DROP PROCEDURE double_number IF EXISTS
DROP TABLE names IF EXISTS
DROP TABLE exhibits IF EXISTS
CREATE TABLE exhibits (id INTEGER PRIMARY KEY, name VARCHAR(255), num_acres DECIMAL(4,1))
CREATE TABLE names (id INTEGER PRIMARY KEY, species_id integer REFERENCES exhibits (id), name VARCHAR(255))
INSERT INTO EXHIBITS VALUES(1,'African Elephant',7.5)
COMMIT
INSERT INTO EXHIBITS VALUES(2,'Zebra',1.2)
COMMIT
INSERT INTO NAMES VALUES(1,1,'Elsa')
COMMIT
INSERT INTO NAMES VALUES(2,2,'Zelda')
COMMIT
INSERT INTO NAMES VALUES(3,1,'Ester')
COMMIT
INSERT INTO NAMES VALUES(4,1,'Eddie')
COMMIT
INSERT INTO NAMES VALUES(5,2,'Zoe')
COMMIT
CREATE PROCEDURE read_e_names() READS SQL DATA DYNAMIC RESULT SETS 1 BEGIN ATOMIC DECLARE result CURSOR WITH RETURN FOR SELECT * FROM names; OPEN result; END
CREATE PROCEDURE read_names_by_letter(IN prefix VARCHAR(10)) READS SQL DATA DYNAMIC RESULT SETS 1 BEGIN ATOMIC DECLARE result CURSOR WITH RETURN FOR  SELECT * FROM names WHERE name LIKE CONCAT(prefix, '%'); OPEN result; END
CREATE PROCEDURE magic_number(OUT num INT) READS SQL DATA\u000a  BEGIN ATOMIC   SET num = 42;  END
CREATE PROCEDURE double_number(INOUT num INT) READS SQL DATA\u000a  DYNAMIC RESULT SETS 1   BEGIN ATOMIC   SET num = num * 2;   END
DISCONNECT
